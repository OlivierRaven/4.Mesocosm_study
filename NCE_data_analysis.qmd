---
title: "NCE_data"
author: "Olivier V. Raven"
format: html
editor: source
---

## Explanation of this script

(brief notes here if you want; left empty to keep as-is)

# Load packages
```{r load packages}
cat("\014"); rm(list = ls())

# Define the list of packages
packages <- c("vegan","ggnewscale","multcompView","patchwork","janitor","lubridate","stringr","tidyverse","dplyr","ggplot2","readxl","writexl","readr")

# Load packages if not already installed
quiet_load <- function(pkg) {
  if (!requireNamespace(pkg, quietly = TRUE)) {
    suppressWarnings(suppressMessages(install.packages(pkg, dependencies = TRUE)))}
  suppressPackageStartupMessages(require(pkg, character.only = TRUE, quietly = TRUE))
  invisible(TRUE)}

invisible(lapply(packages, quiet_load))
```

# Load raw data
```{r Load raw data}
getwd()
exc_file_dir <- "data/raw/Mesocosm_experiment.xlsx"
raw_data_dir <- "data/raw"
der_data_dir <- "data/derived"
fig_dir      <- "figures"

# Read sheets
df_NCE_raw <- readxl::read_excel(exc_file_dir, sheet = "NCE_exp")
df_Feeding_raw <- readxl::read_excel(exc_file_dir, sheet = "Feeding")
```

# make into long format
```{r, fig.width=10, fig.height=6, dpi=100}
# make into long format
koura_long <- df_NCE_raw %>%
  pivot_longer(
    cols = matches("^(location|behaviour)_"),
    names_to   = c(".value","time"),
    names_pattern = "(location|behaviour)_T?(\\d+)" ) %>%
  mutate(time = as.numeric(time))

koura_long <- koura_long %>%
  mutate(period = case_when(
    time < 60 ~ "before",
    time >= 60 & time < 240 ~ "during",
    time >= 240 ~ "after",
    TRUE ~ NA_character_))

# calculate the proportions of location and behavior for each treatment
prop_location_by_treatment <- koura_long %>%
  filter(!is.na(location), location != "", round != 9) %>%
  count(treatment, location = location, name = "n") %>%
  group_by(treatment) %>%
  mutate(prop = n / sum(n)) %>%
  ungroup()

prop_behaviour_by_treatment <- koura_long %>%
  filter(!is.na(behaviour), behaviour != "", round != 9) %>%
  count(treatment, behaviour = behaviour, name = "n") %>%
  group_by(treatment) %>%
  mutate(prop = n / sum(n)) %>%
  ungroup()

# Plots 
p_loc <- ggplot(prop_location_by_treatment, aes(location, prop, colour = treatment)) +
  geom_point() +
  labs(x = "location", y = "proportion")

p_beh <- ggplot(prop_behaviour_by_treatment, aes(behaviour, prop, colour = treatment)) +
  geom_point() +
  labs(x = "behaviour", y = "proportion")

p_loc / p_beh

```
# beh & loc per treatment
```{r, fig.width=12, fig.height=6, dpi=100}

loc_order <- c("ref_back","ref_open","ref_next","wall","floor","barrier")
beh_order <- c("swim","static","walk","climb")

# calculate the proportions of location and behavior for each treatment for each time step
prop_location_time <- koura_long %>%
  filter(!is.na(location), location != "", round != 9) %>%
  count(treatment, time, light, location = location, name = "n") %>%
  group_by(treatment, time, light) %>%
  mutate(prop = n / sum(n)) %>%
  ungroup() %>%
  mutate(
    treatment = factor(treatment, levels = c("control","eel","catfish")),
    location  = factor(location,  levels = loc_order))

# Behaviour
prop_behaviour_time <- koura_long %>%
  filter(!is.na(behaviour), behaviour != "", round != 9) %>%
  count(treatment, time, light, behaviour = behaviour, name = "n") %>%
  group_by(treatment, time, light) %>%
  mutate(prop = n / sum(n)) %>%
  ungroup() %>%
  mutate(
    treatment = factor(treatment, levels = c("control","eel","catfish")),
    behaviour = factor(behaviour, levels = beh_order))


# Location plot
p_loc_time <- ggplot(prop_location_time, aes(time, prop, colour = location, group = location)) +
  geom_line(linewidth = 1.5) +
  geom_vline(xintercept = c(60, 240), linetype = "dashed") +
  facet_grid(light ~ treatment, scales = "free_x") +
  labs(x = NULL, y = "proportion", colour = "location") 

# Behaviour plot
p_beh_time <- ggplot(prop_behaviour_time, aes(time, prop, colour = behaviour, group = behaviour)) +
  geom_line(linewidth = 1.5) +
  geom_vline(xintercept = c(60, 240), linetype = "dashed") +
  facet_grid(light ~ treatment, scales = "free_x") +
  labs(x = "time (min)", y = "proportion", colour = "behaviour") 

# Combine vertically
p_loc_time / p_beh_time

```

```{r fig.width=12, fig.height=8, dpi=100}
# --- Location proportions ---
prop_location_period <- koura_long %>%
  filter(!is.na(location), location != "", round != 9) %>%
  group_by(koura_id, treatment, light, period, location) %>%
  summarise(n = n(), .groups = "drop") %>%
  group_by(koura_id, treatment, light, period) %>%
  complete(location = loc_order, fill = list(n = 0)) %>%
  mutate(prop = n / sum(n)) %>%
  ungroup() %>%
  mutate(
    treatment = factor(treatment, levels = c("control","eel","catfish")),
    location  = factor(location,  levels = loc_order),
    period    = factor(period,    levels = c("before","during","after")))

# --- Behavior proportions ---
prop_behaviour_period <- koura_long %>%
  filter(!is.na(behaviour), behaviour != "", round != 9) %>%
  group_by(koura_id, treatment, light, period, behaviour) %>%
  summarise(n = n(), .groups = "drop") %>%
  group_by(koura_id, treatment, light, period) %>%
  complete(behaviour = beh_order, fill = list(n = 0)) %>%
  mutate(prop = n / sum(n)) %>%
  ungroup() %>%
  mutate(
    treatment = factor(treatment, levels = c("control","eel","catfish")),
    behaviour = factor(behaviour, levels = beh_order),
    period    = factor(period,    levels = c("before","during","after")))

# box plots
p_loc_box <- ggplot(prop_location_period,
                    aes(x = period, y = prop, fill = location)) +
  geom_boxplot(position = position_dodge2(width = 0.8, preserve = "single")) +
  facet_grid(light ~ treatment) +
  labs(x = NULL, y = "proportion", fill = "location") 

p_beh_box <- ggplot(prop_behaviour_period,
                    aes(x = period, y = prop, fill = behaviour)) +
  geom_boxplot(position = position_dodge2(width = 0.8, preserve = "single")) +
  facet_grid(light ~ treatment) +
  labs(x = "period", y = "proportion", fill = "behaviour") 

p_loc_box / p_beh_box

```
# Statistics
```{r}
# ---- Locations ----
# reshape to wide so each location is a column
loc_matrix <- prop_location_period %>%
  tidyr::pivot_wider(names_from = location, values_from = prop, values_fill = 0)

# PERMANOVA using Euclidean distances
adonis2(loc_matrix[loc_order] ~ treatment * light * period,
        data = loc_matrix, method = "euclidean", permutations = 9999)

# ---- Behaviours ----
beh_matrix <- prop_behaviour_period %>%
  tidyr::pivot_wider(names_from = behaviour, values_from = prop, values_fill = 0)

adonis2(beh_matrix[beh_order] ~ treatment * light * period,
        data = beh_matrix, method = "euclidean", permutations = 9999)


```


# koura per time
```{r, fig.width=12, fig.height=50, dpi=100}
# --- Data prep ---
koura_location_time <- koura_long %>%
  filter(!is.na(location), location != "", round != 9) %>%
  mutate(location = factor(location, levels = loc_order))

koura_behaviour_time <- koura_long %>%
  filter(!is.na(behaviour), behaviour != "", round != 9) %>%
  mutate(behaviour = factor(behaviour, levels = beh_order))

# --- Plots ---
p_loc_time <- ggplot(koura_location_time, aes(time, location, col = treatment)) +
  geom_point() +
  geom_vline(xintercept = c(60, 240), linetype = "dashed") +
  facet_grid(koura_id~. , scales = "free_x") +
  labs(x = "time (min)", y = "location") +
  theme(legend.position = "none")

p_beh_time <- ggplot(koura_behaviour_time, aes(time, behaviour, col = treatment)) +
  geom_point(size = 1.5, alpha = 0.8) +
  geom_vline(xintercept = c(60, 240), linetype = "dashed") +
  facet_grid(koura_id~. , scales = "free_x") +
  labs(x = "time (min)", y = "behaviour") 

# --- Combine ---
p_loc_time + p_beh_time

```




